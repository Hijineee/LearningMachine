<?xml version="1.0" encoding="UTF-8"?> <!-- 맵퍼파일 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

  <mapper namespace="Admin">
	<select id="totalCount" parameterType="String" resultType="integer">
		select count(*) as count
		from ${tname}
		<if test = "tname == 'teacher_apply'">
			where t_recognize = 0 
		</if>
	</select>
	
	<select id = "reportCount" resultType="integer">
		select count(*) as count from user_reported
	</select>

  	<select id="userList" resultType="userDTO">
  		select * from user where u_authority IN (1,2,3)
  	</select>
  	
  	<select id="userSearch" parameterType="string" resultType="userDTO">
  		select * from user where u_name LIKE '%' #{u_name } '%'	
  	</select>
  	<select id="studentLecture" parameterType="string" resultType="HashMap">
  		select * from allUser_Lecture_view where u_id = #{u_id} group by u_id
  	</select>
  	
  	<select id="studentReport" parameterType="map" resultType="HashMap"> 
  		select * from user_teacher_reported_View
  		<!--특정학생--> 
  		<if test = "u_id != null and page == null">
  			where u_id = #{u_id} and u_del = 0
  		</if>
  		<if test = "u_id == null and page == null">
  			where u_del = 0 
  		</if>
  		<!--전체리스트조회-->
  		<if test = "u_id == null and page != null">
  			where u_del = 0  group by u_id limit #{page.startPage},#{page.lastPage}
  		</if>
  	</select>
  	
  	<insert id="report" parameterType="bannedDTO">
      INSERT INTO user_banned(u_id,admin_id, bu_reason) 
      VALUES (#{u_id}, #{admin_id},#{bu_reason})
   </insert>
 
 	<update id="userReport" parameterType="String">
 		update user set u_del = 2 where u_id = #{u_id}
 	</update>
 	<update id="back" parameterType="String">
 		update user set u_del = 0 where u_id = #{u_id}
 	</update>
 	
 	<delete id="backdelete" parameterType="String">
 		delete from user_banned where u_id=#{u_id}
 	</delete>
 	
 	<select id="teacherList" resultType="HashMap">
 		SELECT *,SUM(total_register)AS COUNT, COUNT(l_name) AS t_idcount from AllTeacher_Lecture_view GROUP BY t_id
 	</select>
 	
 	<select id="studentBanList" resultType="HashMap">
 		select * from user_banned
 	</select>
 	
 	<select id="teacherSerch" parameterType="String" resultType="HashMap">
 		SELECT *,SUM(total_register)AS COUNT, COUNT(t_id) AS t_idcount from lecture_info_view  
 		where t_nickname LIKE '%' #{t_nickname } '%' 		
 		group by t_nickname	
 	</select>
 	
 	<select id="refundList" resultType="hashmap">
 		select * from user_paymentRefund_view
 	</select>
 	

 	<select id="lectureRequest" parameterType="String" resultType="hashmap">
 		SELECT * ,
		if(l_recognize = 0 ,"승인대기","승인거부") AS request,
		(SELECT c_name FROM category WHERE category.c_code = lecture_apply.c_code) AS c_name
		FROM lecture_apply
 		<if test = "la_no != null">
  		where la_no = ${la_no}
  		</if>
  	</select>

 	<select id="teachervideo" parameterType="String" resultType="HashMap">
 		select * from lecture_info_view 

  	</select>
  	
  	<delete id="lecture_refund1" parameterType="String" >
  		delete from payment_refund_apply where p_no = #{p_no}
  	</delete>
  	
  	<update id="lecture_refund" parameterType="String" >
 		update payment_log set p_refund = 1 where p_no = #{p_no}
 	</update>
 	
 	<insert id="lectureCate" parameterType="map">
 		insert into lecture_category values (#{dto.l_code},#{c_code})
 	</insert>
 	
 	<insert id="lectureGet" parameterType="map">
		insert into lecture(t_id,l_code, l_curriculum, l_name, l_price, l_info) 
		values (#{dto.t_id}, #{dto.l_code},#{dto.l_curriculum},#{dto.l_name},#{dto.l_price},#{dto.l_info})
    </insert>
    
    <update id = "lectureGet2" parameterType="string">
    	update lecture_apply set l_recognize = 1 
    	where la_no = ${la_no} 
    </update>
    
    <update id = "lectureGet3" parameterType="string">
    	update lecture_apply set l_recognize = 2 , la_reason = #{la_reason}
    	where la_no = ${la_no} 
    </update>
    
 	<select id="teacherDetail" parameterType="String" resultType="Hashmap">
		SELECT *, (SELECT COUNT(*) FROM user_teacher_view WHERE t_id = #{u_id}) AS total
		FROM user_teacher_view WHERE t_id = #{u_id}
    </select>
    
    
 	<select id="teacherRequest" parameterType="map" resultType="hashmap">
 		select * from teacher_apply_view where t_recognize = 0 limit #{page.startPage}, #{page.lastPage} 
 		<if test = "u_id != null">
  			and u_id = #{u_id}  limit #{page.startPage}, #{page.lastPage}
  		</if>
  	</select>
  	
  	<select id="teacherRe" parameterType="String" resultType="hashmap">
  		select * from teacher_apply_view where u_id = #{u_id}
  	</select>
  	
  	<insert id="teacherAccept" parameterType="hashmap">
  		insert into teacher (t_id, t_introduce, t_spec, t_etc)
  		values (#{t_apply[0].u_id}, #{t_apply[0].t_introduce}, #{t_apply[0].t_spec}, #{t_apply[0].t_etc})
  	</insert>
  	<update id="teacherAccept1" parameterType="hashmap">
  		update user set u_authority = 4 where u_id = #{t_apply[0].u_id}
  	</update>
  	<update id="teacherAccept2" parameterType="map">
  		update teacher_apply set t_recognize = 1 where t_id = #{t_apply[0].u_id}
  	</update>
  	
  	<select id="categoryList" resultType="map">
  		select * from category
  	</select>
  	
  	<insert id="addCategory" parameterType="map">
  		insert into category (c_name) values(#{c_name})
  	</insert>
  	
  	<insert id="deleteCategory" parameterType="map">
  		delete from category where c_name = #{c_name};
  	</insert>
 	
  </mapper>